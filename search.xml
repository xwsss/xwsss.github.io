<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux常用命令学习</title>
      <link href="/2023/03/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/03/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL数据库学习01</title>
      <link href="/2023/03/15/SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A001/"/>
      <url>/2023/03/15/SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A001/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Orcale数据库客户端"><a href="#1-Orcale数据库客户端" class="headerlink" title="1.Orcale数据库客户端"></a>1.Orcale数据库客户端</h3><p>sqlplus是Oracle数据库自带的客户端工具，类似的客户端工具还有</p><p>oracle数据库安装时自动创建的两个管理员账号：sys system (和普通用户scott，这个账号需要先解除冻结才能使用)</p><p>sqlplus的登录命令是:</p><pre class="line-numbers language-none"><code class="language-none">管理员用户登录sqlplus 用户名&#x2F;密码 as 连接身份(如：sysdba、sysoper、normal)普通用户登录sqlplus 用户名&#x2F;密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>SQL Developer：<a href="https://www.oracle.com/tools/downloads/sqldev-downloads.html">https://www.oracle.com/tools/downloads/sqldev-downloads.html</a></p><p>PLSQL Developer：<a href="https://www.allroundautomations.com/try-it-free/">https://www.allroundautomations.com/try-it-free/</a></p><p>Navicat：下载地址以及教程   <a href="https://mp.weixin.qq.com/s/YyzoEG2SMwn4BdPfYWIfXw">https://mp.weixin.qq.com/s/YyzoEG2SMwn4BdPfYWIfXw</a></p><h3 id="2-oracle数据库用户和权限"><a href="#2-oracle数据库用户和权限" class="headerlink" title="2.oracle数据库用户和权限"></a>2.oracle数据库用户和权限</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">创建用户命令<span class="token punctuation">(</span>必须是管理员才能创建新用户，用户名只能用字母、数字、下划线组成，且首字符只能是字母<span class="token punctuation">)</span><span class="token keyword">create</span> <span class="token keyword">user</span> 用户名 identified <span class="token keyword">by</span> 密码<span class="token punctuation">;</span> <span class="token comment">-- 例：create user scott identified by tiger;</span>冻结账户<span class="token punctuation">(</span>冻结账号和解除冻结都必须是管理员才能进行冻结和解除<span class="token punctuation">)</span><span class="token keyword">alter</span> <span class="token keyword">user</span> 用户名 account <span class="token keyword">lock</span><span class="token punctuation">;</span>  <span class="token comment">-- 例：alter user scott account lock;</span>解除冻结<span class="token keyword">alter</span> <span class="token keyword">user</span> 用户名 account <span class="token keyword">unlock</span><span class="token punctuation">;</span>  <span class="token comment">-- 例：alter user scott account unlock;</span>修改用户密码<span class="token punctuation">(</span>用户可以自己修改，管理员也可以修改<span class="token punctuation">)</span><span class="token keyword">alter</span> <span class="token keyword">user</span> 用户名 identified <span class="token keyword">by</span> 新密码<span class="token punctuation">;</span>赋予权限<span class="token punctuation">(</span>必须是管理员用户<span class="token punctuation">(</span>sys<span class="token punctuation">,</span>system<span class="token punctuation">)</span>才能赋予权限<span class="token punctuation">,</span>权限有：<span class="token keyword">connect</span><span class="token punctuation">,</span>resource<span class="token punctuation">,</span>dba。<span class="token keyword">connect</span>和resource相互独立，resource不包含<span class="token keyword">connect</span><span class="token punctuation">)</span><span class="token keyword">grant</span> 权限 <span class="token keyword">to</span> 用户名<span class="token punctuation">;</span> <span class="token comment">-- 例：grant connect,resource to scott;</span>回收权限<span class="token punctuation">(</span>必须是管理员才能回收<span class="token punctuation">)</span><span class="token keyword">revoke</span> 权限 <span class="token keyword">from</span> 用户名<span class="token punctuation">;</span>  <span class="token comment">-- 例： revoke connect,resource from scott;</span>删除用户<span class="token punctuation">(</span>必须是管理员才能删除<span class="token punctuation">)</span><span class="token keyword">drop</span> <span class="token keyword">user</span> 用户名<span class="token punctuation">;</span>  <span class="token comment">--例： drop user scott;</span>强制删除<span class="token keyword">drop</span> <span class="token keyword">user</span> 用户名 <span class="token keyword">cascade</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-SQL数据操作和查询"><a href="#3-SQL数据操作和查询" class="headerlink" title="3.SQL数据操作和查询"></a>3.SQL数据操作和查询</h3><p>Oracle数据库的核心是表，表里的列常用的数据类型如下：</p><table><thead><tr><th align="left">类型</th><th>含义</th></tr></thead><tbody><tr><td align="left">char(length)</td><td>存储固定长度的字符串。参数length指定了长度，如果存储的字符串长度小于length,用空格填充。默认长度1，最长不超过2000字节。</td></tr><tr><td align="left">varchar2(length)</td><td>存储可变长的字符串。参数length指定了该字符串的最大长度。默认长度1，最长不超过4000字符。</td></tr><tr><td align="left">number(p,s)</td><td>既可以存储浮点数，也可以存储整数，p表示数字的最大位数(如果是小数包括整数部分和小数部分和小数点，p默认是38位)，s指小数位数。</td></tr><tr><td align="left">date</td><td>存储日期和时间，存储纪元、4位年、月、日、时、分、秒，存储时间从公元前4712年1月1日到公元后4712年12月31日。</td></tr><tr><td align="left">timestamp</td><td>不但存储日期的年月日，时分秒，以及秒后6位，同时包括时区。</td></tr><tr><td align="left">clob</td><td>存储大的文本，比如存储非结构化的XML文档</td></tr><tr><td align="left">blob</td><td>存储二进制对象，如图形，视频，声音等。</td></tr></tbody></table><p>number类型示例：</p><table><thead><tr><th>格式</th><th>输入的数字</th><th>实际的存储</th></tr></thead><tbody><tr><td>number</td><td>1234.567</td><td>1234.567</td></tr><tr><td>number(6，2)</td><td>123.4567</td><td>123.46</td></tr><tr><td>number(4，2)</td><td>12345.67</td><td>输入的数字超过了所指定的精度，数据库不能存储</td></tr></tbody></table><p>内置函数sysdate,可以获取当前的系统日期和时间，返回date类型。</p><p>systimestamp函数可以返回当前日期、时间、和时区。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">例如：<span class="token keyword">select</span> sysdate<span class="token punctuation">,</span>systimestamp <span class="token keyword">from</span> dual<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-数据操纵语言"><a href="#3-1-数据操纵语言" class="headerlink" title="3.1 数据操纵语言"></a>3.1 数据操纵语言</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">创建表的语法结构<span class="token keyword">create</span> <span class="token keyword">table</span> 表明<span class="token punctuation">(</span>列名<span class="token number">1</span> 数据类型<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>列名n 数据类型<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token operator">|</span>列名<span class="token operator">|</span>表达式 <span class="token keyword">from</span> 表名 <span class="token keyword">where</span> 条件 <span class="token keyword">order</span> <span class="token keyword">by</span> 列名 <span class="token keyword">asc</span><span class="token operator">|</span><span class="token keyword">desc</span><span class="token comment">-- 查询的命令公式</span><span class="token comment">-- 1.*号表示所有的列</span><span class="token comment">-- 2.列名可以选择多个表中的列名，各个列名中间用逗号分隔</span><span class="token comment">-- 3.表达式可以是列名、函数、常熟等组成的表达式</span><span class="token comment">-- 4.where是查询的条件</span><span class="token comment">-- 5.order by 要求查询的结果中排序默认是升序,asc是升序，desc是降序</span><span class="token keyword">insert</span> <span class="token keyword">into</span> 表明<span class="token punctuation">(</span>列名<span class="token number">1</span><span class="token punctuation">,</span>列名n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span>值n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token comment">-- 添加数据的语句</span><span class="token comment">-- 1.列名可以省略，当省略列名时，默认时表中的所有列名，列名顺序为表中定义中列的先后顺序</span><span class="token comment">-- 2.值的数量要和列名的数量和顺序一致。值的类型和列名的类型一致。</span><span class="token comment">-- 3.值的数据类型时number时，直接填数值。值的数据类型时char、varchar2时，值需要用单引号引起来。值的数据类型是date，值需要用to_date()转换</span><span class="token keyword">update</span> 表明 <span class="token keyword">set</span> 列名<span class="token operator">=</span>更新后的值，列名<span class="token operator">=</span>更新后的值<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">where</span> 条件<span class="token punctuation">;</span><span class="token comment">-- 修改数据的语句</span><span class="token comment">-- 表示把满足where条件的值改成更新后的值</span><span class="token keyword">delete</span> <span class="token keyword">from</span> 表名 <span class="token keyword">where</span> 条件<span class="token punctuation">;</span><span class="token comment">-- 删除数据的语句</span><span class="token comment">-- 表示把满足where条件的数据以行为单位进行删除</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2-SQL操作符"><a href="#3-2-SQL操作符" class="headerlink" title="3.2 SQL操作符"></a>3.2 SQL操作符</h4><pre class="line-numbers language-none"><code class="language-none">关系运算符&#x3D; 等于&lt;&gt;或者!&#x3D; 不等于 &lt; 小于&gt; 大于&lt;&#x3D;小于或等于&gt;&#x3D;大于或等于逻辑运算符and 并且  当where后有多个条件，并且这些条件都成立，条件和条件之间用and连接or  或者  当where后有多个条件，只需要满足其中的一个条件时，条件和条件之间用or连接not 求反 null 空值 空值是指没有赋值，不知道，不能用的值叫空值；0和空格不是空值。例：select * from 表名 where 列名 is null;in 可以通过这个操作符在where条件中指定某个列的数据范围 例：select * from 表名 where 列名  in&#x2F;not in(值1,...,值n)模糊查询like  %表示0个或者多个任意字符，_表示一个任意字符，一般用在字符串数据类型中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-3-rownum和rowid"><a href="#3-3-rownum和rowid" class="headerlink" title="3.3 rownum和rowid"></a>3.3 rownum和rowid</h4><p>rownum：在查询时，可以通过rownum给查询出来的每一行数据标注一个行号</p><p>rowid：表中的每一行在数据文件中都有一个物理地址，ROWID伪列返回的就是该行的物理地址。使用ROWID可以快速的定位表中的某一行。ROWID值可以唯一的标识表中的一行。由于ROWID返回的是该行的物理地址，因此使用ROWID可以显示行是如何存储的。</p><h3 id="4-Oracle函数"><a href="#4-Oracle函数" class="headerlink" title="4. Oracle函数"></a>4. Oracle函数</h3><h4 id="4-1-字符函数"><a href="#4-1-字符函数" class="headerlink" title="4.1 字符函数"></a>4.1 字符函数</h4><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>ascii(x)</td><td>返回字符x的ASCII编码</td></tr><tr><td>concat(x,y)</td><td>连接字符x和y</td></tr><tr><td>instr(x,str)</td><td>在x中查找str</td></tr><tr><td>length(x)</td><td>返回x的长度</td></tr><tr><td>lower(x)</td><td>x转换为小写</td></tr><tr><td>upper(x)</td><td>x转换为大写</td></tr><tr><td>ltrim(x,’trim_str’)</td><td>把x的左边截去trim_str字符串，缺省截去空格。</td></tr><tr><td>rtrim(x,’trim_str’)</td><td>把x的右边截去trim_str字符串，缺省截去空格。</td></tr><tr><td>trim(‘trim_str’ from x)</td><td>把x的两边截去trim_str字符串，缺省截去空格。</td></tr><tr><td>replace(x,old,new)</td><td>在x中查找old，并替换为new</td></tr><tr><td>substr(x,start,length)</td><td>返回x的字串，从start处开始，截取length个字符，缺省length，默认到结尾。</td></tr></tbody></table><table><thead><tr><th>示例</th><th>示例结果</th></tr></thead><tbody><tr><td>SELECT ASCII(‘a’) FROM DUAL</td><td>97</td></tr><tr><td>SELECT CONCAT(‘Hello’, ‘ world’) FROM DUAL</td><td>Hello world</td></tr><tr><td>SELECT INSTR(‘Hello world’，’or’) FROM DUAL</td><td>8</td></tr><tr><td>SELECT LENGTH(‘Hello’) FROM DUAL</td><td>5</td></tr><tr><td>SELECT LOWER(‘hElLO’) FROM DUAL;</td><td>hello</td></tr><tr><td>SELECT UPPER(‘hello’) FROM DUAL</td><td>HELLO</td></tr><tr><td>SELECT LTRIM(‘&#x3D;&#x3D;&#x3D;HELLO&#x3D;&#x3D;&#x3D;’, ‘&#x3D;’) FROM DUAL</td><td>HELLO&#x3D;&#x3D;&#x3D;</td></tr><tr><td>SELECT RTRIM(‘&#x3D;&#x3D;&#x3D;HELLO&#x3D;&#x3D;&#x3D;’, ‘&#x3D;’) FROM DUAL</td><td>&#x3D;&#x3D;&#x3D;HELLO</td></tr><tr><td>SELECT TRIM(‘&#x3D;’ FROM ‘&#x3D;&#x3D;&#x3D;HELLO&#x3D;&#x3D;&#x3D;’) FROM DUAL</td><td>HELLO</td></tr><tr><td>SELECT REPLACE(‘ABCDE’,’CD’,’AAA’) FROM DUAL</td><td>ABAAAE</td></tr><tr><td>SELECT SUBSTR(‘ABCDE’,2) FROM DUAL</td><td>BCDE</td></tr><tr><td>SELECT SUBSTR(‘ABCDE’,2,3) FROM DUAL</td><td>BCD</td></tr></tbody></table><h4 id="4-2-数字函数"><a href="#4-2-数字函数" class="headerlink" title="4.2 数字函数"></a>4.2 数字函数</h4><table><thead><tr><th><strong>函数</strong></th><th><strong>说明</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td>ABS(x)</td><td>x绝对值</td><td>ABS(-3)&#x3D;3</td></tr><tr><td>ACOS(x)</td><td>x的反余弦</td><td>ACOS(1)&#x3D;0</td></tr><tr><td>COS(x)</td><td>余弦</td><td>COS(1)&#x3D;1.57079633</td></tr><tr><td>CEIL(x)</td><td>大于或等于x的最小值</td><td>CEIL(5.4)&#x3D;6</td></tr><tr><td>FLOOR(x)</td><td>小于或等于x的最大值</td><td>FLOOR(5.8)&#x3D;5</td></tr><tr><td>LOG(x,y)</td><td>x为底y的对数</td><td>LOG(2,4)&#x3D;2</td></tr><tr><td>MOD(x,y)</td><td>x除以y的余数</td><td>MOD(8,3)&#x3D;2</td></tr><tr><td>POWER(x,y)</td><td>x的y次幂</td><td>POWER(2,3)&#x3D;8</td></tr><tr><td>ROUND(x[,y])</td><td>x在第y位四舍五入</td><td>ROUND(3.456,2)&#x3D;3.46</td></tr><tr><td>SQRT(x)</td><td>x的平方根</td><td>SQRT(4)&#x3D;2</td></tr><tr><td>TRUNC(x[,y])</td><td>x在第y位截断</td><td>TRUNC(3.456,2)&#x3D;3.45</td></tr></tbody></table><p>说明：</p><p>1.ROUND(X[,Y])，四舍五入。</p><p>在缺省y时，默认y&#x3D;0；比如：ROUND(3.56)&#x3D;4。</p><p>y是正整数，就是四舍五入到小数点后y位。ROUND(5.654,2)&#x3D;5.65。</p><p>y是负整数，四舍五入到小数点左边|y|位。ROUND(351.654,-2)&#x3D;400。</p><p>2.TRUNC(x[,y])，直接截取，不四舍五入。</p><p>在缺省y时，默认y&#x3D;0；比如：TRUNC (3.56)&#x3D;3。</p><p>y是正整数，就是四舍五入到小数点后y位。TRUNC (5.654,2)&#x3D;5.65。</p><p>y是负整数，四舍五入到小数点左边|y|位。TRUNC (351.654,-2)&#x3D;300。</p><h4 id="4-3-日期函数和转换函数"><a href="#4-3-日期函数和转换函数" class="headerlink" title="4.3 日期函数和转换函数"></a>4.3 日期函数和转换函数</h4><p>1.add_months(d,s)  ,在某一个日期d上，加上指定的月数n，返回计算后的新日期。d表示日期，n表示要加的月数。</p><p>2.last_day(d)   ,返回指定日期当月的最后一天。</p><p>3.round(d,’fmt’)  ,返回一个以fmt为格式的四舍五入日期值，d是日期，fmt是格式模型。默认fmt为DDD，即月中的某一天。</p><p>​fmt格式有： ‘year’ 则舍入到某年的1月1日，即前半年舍去，后半年作为下一年。</p><p>​  ‘month’ 则舍入到某月的1日，即前月舍去，后半月作为下一月。</p><p>​  ‘ddd’  即月中的某一天，最靠近的天，前半天舍去，后半天作为第二天。</p><p>​ ‘day’    即月中的某一天，最靠近的天，前半天舍去，后半天作为第二天。</p><p>4.extra(fmt from d)  提取日期中的特定部分。</p><p>‘fmt’  有year、month、day、hour、minute、second。其中YEAR、MONTH、DAY可以为DATE类型匹配，也可以与TIMESTAMP类型匹配；但是HOUR、MINUTE、SECOND必须与TIMESTAMP类型匹配。</p><p>5.转换函数</p><p>1.to_char(d|n,’fmt’) ,把日期和数字转换为制定格式的字符串。fmt是格式化字符串。</p><p>2.to_date(x,’fmt’) ,把一个字符串以fmt格式转换为一个日期类型。</p><p>3.to_number(x,’fmt’)  把一个字符串以fmt格式转换为一个数字。</p><h4 id="4-4-其他函数"><a href="#4-4-其他函数" class="headerlink" title="4.4 其他函数"></a>4.4 其他函数</h4><p>nvl(x,value)  ,如果x为空，返回value，否则返回x</p><p>nvl(x,value1,value2) ,如果x非空，返回value1，否则返回value2。</p><h4 id="4-5聚合函数"><a href="#4-5聚合函数" class="headerlink" title="4.5聚合函数"></a>4.5聚合函数</h4><table><thead><tr><th>名称</th><th>作用</th><th>语法</th></tr></thead><tbody><tr><td>avg</td><td>平均值</td><td>avg(表达式)</td></tr><tr><td>sum</td><td>求和</td><td>sum(表达式)</td></tr><tr><td>max、min</td><td>最大值、最小值</td><td>min(表达式)，max(表达式)</td></tr><tr><td>count</td><td>数据统计</td><td>count(表达式)</td></tr></tbody></table><h3 id="5-索引"><a href="#5-索引" class="headerlink" title="5.索引"></a>5.索引</h3><p>5.1 数据库中索引（Index）的概念与目录的概念非常类似。如果某列出现在查询的条件中，而该列的数据是无序的，查询时只能从第一行开始一行一行的匹配。创建索引就是对某些特定列中的数据排序，生成独立的索引表。在某列上创建索引后，如果该列出现在查询条件中，Oracle会自动的引用该索引，先从索引表中查询出符合条件记录的ROWID，由于ROWID是记录的物理地址，因此可以根据ROWID快速的定位到具体的记录，表中的数据非常多时，引用索引带来的查询效率非常可观。</p><p>1 创建普通索引<br>     create index 索引名 on  表名(列名); –表示给这个表的这个列创建一个普通索引</p><p>   2 创建唯一索引：<br>     create unique index 索引名 on 表名(列名)<br>       唯一索引，要求就这个列中的数据是不能重复</p><p>   3 删除索引:<br>     drop index 索引名; </p><p>5.2 主键和外键</p><pre class="line-numbers language-none"><code class="language-none">alter table 表名 add constraint 主键名 primary key 列名;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="6-练习题"><a href="#6-练习题" class="headerlink" title="6. 练习题"></a>6. 练习题</h3><p>1.取前几条数据。</p><p>2.先根据部门编号升序，再根据薪水降序。</p><p>3.查询出雇员表(emp)中comm为null的记录。</p><p>4.查询出雇员表(emp)中员工的姓名,将名字中的’A’换为’1’,’B’换为’2’。</p><p>5.查询出每个部门的平均薪水，并显示出部门详细信。</p><p>6.查询出部门人员中薪水大于2000的人在2个以上的部门。</p><p>7.求出每个部门中薪水最高的员工。</p><p>8.分别统计出各个月份入职(hiredate)的员工有多少人。</p><p>9.查询scott.emp表中所有列。</p><p>10.查询scott.emp表中的ename列。</p><p>11.查询scott.emp表中ename列，将其列名改为“雇员姓名”。</p><p>12.查询scott.emp表中sal、comm两项工资的总和。</p><p>13.消除emp表中job列的重复值。</p><p>14.查看scott.emp表中在10号部门的所有员工具体情况。</p><p>15.查询scott.emp表中工资在1500和3000之间的雇员编号。</p><p>16.查询scott.emp表中在10、20或30号部门工作的雇员编号。</p><p>17.查询scott.emp表中名字中含有K字母的雇员姓名。</p><p>18.查询comm列为NULL的雇员信息。</p><p>19.查询10号部门工资在1000元以上的雇员信息。</p><p>20.将emp表按照部门号升序、员工编号降序排列。</p><p>21.统计scott.emp表中各部门的人数。</p><p>22.统计各部门人数，将多于5人的部门编号输出。</p><p>23.将scott.emp表中的内容复制一份到newemp表。</p><p>内置函数 </p><p>24.查看A的ASCII码。25.查看ASCII码为65的字符。</p><p>26.使用LENGTH函数求字符串‘This is Oracle 11g’。</p><p>27.使用CONCAT函数将EMP表中各元组的ename添加在job之后。</p><p>28.使用SUBSTRING函数、SUBSTR函数29.使用MOD函数求8除以3的余数。</p><p>30.使用ROUND函数取整。</p><p>聚合函数</p><p>31.求scott.emp表中sal+500后的平均值。求scott.emp表中不同sal值的平均值。求scott.emp表中sal的最大值和最小值。求scott.emp表所有员工的人数。求scott.emp表sal列之和</p><p>32.日期函数求当前系统时间。求当前月份的最后一天。求当前日期与2016年12月20日之间相隔的月数。求下一个星期一的日期。求你在的年龄。</p><p>转换函数 </p><p>33.将123转换成字符串。</p><p>将’123’转换成数值型。</p><p>将当前日期转换成日期型。</p><p>将‘970.13’转换成数值型后再加上100。</p><p>多表连查 </p><p>34.查询scott.emp表各雇员信息与其所在部门信息。</p><p>35.查询scott.emp表各雇员名字和所在部门名称。</p><p>36.查询比SMITH工资高的雇员姓名。</p><p>37.查询各雇员名字和所在部门名称。</p><p>嵌套查询（子查询） </p><p>38.查询SMITH所在部门的详细信息。</p><p>39.查询与SMITH在同一部门的员工信息。</p><p>40.找出其他部门比10号部门某员工工资高的雇员信息。</p><p>41.找出SMITH所在部门的详细信息。</p><p>42.查看职务为CLERK或SALESMAN的雇员信息。</p><p>高级查询</p><p>43.查询所有员工的人数和他们的平均工资</p><p>44.查询部门编号为20的所有员工信息</p><p>45.查询部门编号为20，部门中工资最高的员工信息46.查询将金COMM高于工资SAL 20%的员工信息</p><p>47.查询所有有奖金的员工信息</p><p>48.查询工龄大于或等于10年的员工信息</p><p>49.查询员工名正好为8个字母的员工信息</p><p>50.查询员工的姓名和工资，并按工资降序排序</p><p>51.查询所有员工的姓名、部门号、工资，结果先按部门号升序排序，再按工资降序排序</p><p>52.查询各个部门中的员工的人数和平均资</p><p>53.统计各个工种的员工的人数和平均工资</p><p>答案地址：<a href="https://blog.csdn.net/m0_63300795/article/details/123861855">https://blog.csdn.net/m0_63300795/article/details/123861855</a></p><p>其他练习：<a href="https://blog.csdn.net/m0_45210394/article/details/125492544">https://blog.csdn.net/m0_45210394/article/details/125492544</a></p><h3 id="7-SQL练习拓展"><a href="#7-SQL练习拓展" class="headerlink" title="7.SQL练习拓展"></a>7.SQL练习拓展</h3><h5 id="7-1-1-第一道拓展练习题"><a href="#7-1-1-第一道拓展练习题" class="headerlink" title="7.1.1.第一道拓展练习题"></a>7.1.1.第一道拓展练习题</h5><p>student（学生表）</p><table><thead><tr><th>id</th><th>c_id</th><th>Name</th><th>Sex</th><th>Score</th></tr></thead><tbody><tr><td>001</td><td>1</td><td>张三</td><td>男</td><td>90</td></tr><tr><td>002</td><td>1</td><td>李四</td><td>女</td><td>80</td></tr><tr><td>003</td><td>1</td><td>王五</td><td>男</td><td>65</td></tr><tr><td>004</td><td>2</td><td>小刘</td><td>男</td><td>60</td></tr><tr><td>005</td><td>2</td><td>赵六</td><td>女</td><td>75</td></tr><tr><td>006</td><td>3</td><td>李伍</td><td>女</td><td>90</td></tr></tbody></table><p>class（班级表）</p><table><thead><tr><th>id</th><th>Name</th></tr></thead><tbody><tr><td>1</td><td>一班</td></tr><tr><td>2</td><td>二班</td></tr></tbody></table><p>1.1写一条于sql语句查询出得分最高的学生，结果如何下：</p><table><thead><tr><th>c_Name</th><th>Name</th><th>Sex</th><th>Score</th></tr></thead><tbody><tr><td>一班</td><td>张三</td><td>男</td><td>90</td></tr><tr><td></td><td>李五</td><td>女</td><td>90</td></tr></tbody></table><p>1.2写一条sql语句查询出一班、二班的人数和平均分，并且按照由高到低排序</p><table><thead><tr><th>c_Name</th><th>RS</th><th>Score</th></tr></thead><tbody><tr><td>一班</td><td>xx</td><td>xx</td></tr><tr><td>二班</td><td>xx</td><td>xx</td></tr></tbody></table><h5 id="7-1-2第二道拓展练习题"><a href="#7-1-2第二道拓展练习题" class="headerlink" title="7.1.2第二道拓展练习题"></a>7.1.2第二道拓展练习题</h5><p>A表 保存客户的基本信息。字段：客户号、姓名、身份证号、出生年月（yyyymmdd）</p><table><thead><tr><th>NO（客户号）</th><th>NAME（姓名）</th><th>ID（身份证号）</th><th>BIRTH（出生年月）</th><th>COUNTRY（国籍）</th></tr></thead><tbody><tr><td>001</td><td>张三</td><td>310111XXXXX1</td><td>19900101</td><td>中国</td></tr><tr><td>002</td><td>李四</td><td>310111XXXXX2</td><td>19800201</td><td>中国</td></tr><tr><td>003</td><td>王五</td><td>310111XXXXX3</td><td>19850301</td><td>中国</td></tr><tr><td>004</td><td>赵六</td><td>310111XXXXX4</td><td>19930401</td><td>美国</td></tr></tbody></table><p>B表 保存客户的资产负债信息。字段：客户号、存款金额、贷款金额</p><table><thead><tr><th>NO（客户号）</th><th>DEPOSIT（存款金额）</th><th>CREDIT（信用卡余额）</th></tr></thead><tbody><tr><td>001</td><td>10001.00</td><td>-100.00</td></tr><tr><td>002</td><td>1000.00</td><td>-2000</td></tr><tr><td>003</td><td>0</td><td>-5000</td></tr><tr><td>004</td><td>100.01</td><td>0</td></tr></tbody></table><p>1.SQL查询语句：姓名叫李四，获取他的身份证号和客户号</p><p>2.SQL查询语句：存款金额大于等于1000的，客户号、客户姓名、身份证号</p><p>3.SQL查询语句：按国籍统计客户号的数量</p><table><thead><tr><th>国籍</th><th>数量</th></tr></thead><tbody><tr><td>中国</td><td>X</td></tr><tr><td>美国</td><td>Y</td></tr></tbody></table><p>4.SQL查询语句：统计80后、90后的信用卡余额总额</p><table><thead><tr><th>年龄段</th><th>信用卡余额</th></tr></thead><tbody><tr><td>80后</td><td>X</td></tr><tr><td>90后</td><td>Y</td></tr></tbody></table><h5 id="7-1-3第三道拓展练习题"><a href="#7-1-3第三道拓展练习题" class="headerlink" title="7.1.3第三道拓展练习题"></a>7.1.3第三道拓展练习题</h5><p>tcbiz_pd.OrderTrans（status：1-新建，2-处理中）</p><table><thead><tr><th>id</th><th>orderNo</th><th>status</th><th>crttime</th><th>deleted</th></tr></thead><tbody><tr><td>1</td><td>ewrt5432</td><td>1</td><td>2021-02-03 19:09:00</td><td>0</td></tr><tr><td>2</td><td>324ewwq</td><td>1</td><td>2021-02-03 09:29:00</td><td>0</td></tr><tr><td>3</td><td>ewrt4321</td><td>2</td><td>2021-02-04 19:19:00</td><td>0</td></tr></tbody></table><p>期望结果</p><table><thead><tr><th>orderNO</th><th>status</th></tr></thead><tbody><tr><td>ewrt5432</td><td>新建</td></tr><tr><td>324ewwq</td><td>新建</td></tr><tr><td>ewrt4321</td><td>处理中</td></tr></tbody></table><p>实现SQL（注意：查询结果中的status的value为中文状态）</p><p>SQL&gt;</p><p>tcbiz_pd.testCase</p><table><thead><tr><th>id</th><th>caseName</th><th>status</th><th>crttime</th><th>crtUser</th></tr></thead><tbody><tr><td>1</td><td>支付交易成功</td><td>成功</td><td>2021-02-03 09:09:00</td><td>xl112</td></tr><tr><td>2</td><td>支付交易成功</td><td>成功</td><td>2021-02-03 19:09:00</td><td>xl112</td></tr><tr><td>3</td><td>支付交易成功</td><td>成功</td><td>2021-02-04 09:09:00</td><td>xl112</td></tr><tr><td>4</td><td>支付交易成功</td><td>成功</td><td>2021-02-05 09:19:00</td><td>wxp7786</td></tr><tr><td>5</td><td>支付交易成功</td><td>成功</td><td>2021-02-05 19:09:00</td><td>lpy2232</td></tr><tr><td>6</td><td>认证交易成功</td><td>成功</td><td>2021-02-05 09:09:00</td><td>wxp7786</td></tr><tr><td>7</td><td>认证交易成功</td><td>失败</td><td>2021-02-05 22:09:00</td><td>wxp7786</td></tr></tbody></table><p>tcbiz_pd.User</p><h4 id="7-2-拓展答案"><a href="#7-2-拓展答案" class="headerlink" title="7.2.拓展答案"></a>7.2.拓展答案</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 第一道拓展练习题答案</span><span class="token number">1</span>、<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student a <span class="token keyword">left</span> <span class="token keyword">join</span> class b <span class="token keyword">on</span> a<span class="token punctuation">.</span>c_id <span class="token operator">=</span> b<span class="token punctuation">.</span>id<span class="token keyword">where</span> score <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token keyword">from</span> student<span class="token punctuation">)</span><span class="token number">2</span>、<span class="token keyword">select</span> b<span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">avg</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token keyword">as</span> avgScore <span class="token keyword">from</span> student a<span class="token punctuation">,</span>class b <span class="token keyword">where</span> a<span class="token punctuation">.</span>c_id <span class="token operator">=</span> b<span class="token punctuation">.</span>id<span class="token keyword">group</span> <span class="token keyword">by</span> b<span class="token punctuation">.</span>name<span class="token keyword">order</span> <span class="token keyword">by</span> avgScore<span class="token punctuation">;</span><span class="token comment">-- 第二道拓展练习题答案</span><span class="token number">1</span>、<span class="token keyword">select</span> ID <span class="token keyword">from</span> A <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">'李四'</span><span class="token punctuation">;</span><span class="token number">2</span>、<span class="token keyword">select</span> <span class="token keyword">NO</span><span class="token punctuation">,</span>NAME，ID <span class="token keyword">from</span> A<span class="token punctuation">,</span>B <span class="token keyword">where</span> A<span class="token punctuation">.</span><span class="token keyword">NO</span> <span class="token operator">=</span> B<span class="token punctuation">.</span><span class="token keyword">NO</span> <span class="token operator">AND</span> DEPOSIT <span class="token operator">>=</span> <span class="token number">1000</span><span class="token punctuation">;</span><span class="token number">3</span>、<span class="token keyword">select</span> COUNTRY<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> A <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> COUNTRY<span class="token punctuation">;</span><span class="token number">4</span>、<span class="token keyword">SELECT</span> <span class="token string">'80 后'</span> <span class="token keyword">as</span> 年龄段，<span class="token function">sum</span><span class="token punctuation">(</span>CREDIT<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">'信用卡余额'</span> <span class="token keyword">FROM</span> A<span class="token punctuation">,</span>B <span class="token keyword">WHERE</span> A<span class="token punctuation">.</span><span class="token keyword">NO</span> <span class="token operator">=</span> B<span class="token punctuation">.</span><span class="token keyword">NO</span> <span class="token operator">AND</span> BIRTH <span class="token operator">>=</span> <span class="token number">19800101</span> <span class="token operator">AND</span> BIRTH <span class="token operator">&lt;</span> <span class="token number">19900101</span><span class="token keyword">UNION</span><span class="token keyword">SELECT</span> <span class="token string">'90 后'</span> <span class="token keyword">as</span> 年龄段，<span class="token function">sum</span><span class="token punctuation">(</span>CREDIT<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">'信用卡余额'</span> <span class="token keyword">FROM</span> A<span class="token punctuation">,</span>B <span class="token keyword">WHERE</span> A<span class="token punctuation">.</span><span class="token keyword">NO</span> <span class="token operator">=</span> B<span class="token punctuation">.</span><span class="token keyword">NO</span> <span class="token operator">AND</span> BIRTH <span class="token operator">>=</span> <span class="token number">19900101</span> <span class="token operator">AND</span> BIRTH <span class="token operator">&lt;</span> <span class="token number">20000101</span><span class="token punctuation">;</span><span class="token comment">-- 第三道拓展练习题答案</span><span class="token number">1</span>、<span class="token keyword">select</span> orderNo<span class="token punctuation">,</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">status</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'新建'</span><span class="token punctuation">,</span><span class="token string">'处理中'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> OrderTrans<span class="token punctuation">;</span><span class="token number">2</span>、<span class="token keyword">select</span> DATE_FORMAT<span class="token punctuation">(</span>a<span class="token punctuation">.</span>crttime<span class="token punctuation">,</span><span class="token string">'%m-%d-%Y'</span><span class="token punctuation">)</span> <span class="token punctuation">,</span>username<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> testCase a<span class="token punctuation">,</span><span class="token keyword">User</span> b <span class="token keyword">where</span> a<span class="token punctuation">.</span>crtUser <span class="token operator">=</span> b<span class="token punctuation">.</span>UserId <span class="token keyword">group</span> <span class="token keyword">by</span> DATE_FORMAT<span class="token punctuation">(</span>a<span class="token punctuation">.</span>crttime<span class="token punctuation">,</span><span class="token string">'%m-%d-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>b<span class="token punctuation">.</span>username<span class="token punctuation">,</span> <span class="token keyword">having</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">'成功'</span><span class="token punctuation">;</span><span class="token number">3</span>、<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">,</span>DATE_FORMAT<span class="token punctuation">(</span>crttime<span class="token punctuation">,</span><span class="token string">'%m-%d-%Y'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> OrderInfo <span class="token keyword">group</span> <span class="token keyword">by</span>DATE_FORMAT<span class="token punctuation">(</span>crttime<span class="token punctuation">,</span><span class="token string">'%m-%d-%Y'</span><span class="token punctuation">)</span>；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> SQL </tag>
            
            <tag> Orcale </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/15/hello-world/"/>
      <url>/2023/03/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
