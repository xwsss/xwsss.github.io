<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>英语学习-英语语法学习</title>
      <link href="/2023/03/18/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0-%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/03/18/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0-%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>测试学习记录01</title>
      <link href="/2023/03/18/%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%9501/"/>
      <url>/2023/03/18/%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%9501/</url>
      
        <content type="html"><![CDATA[<p>1.1.1什么是软件</p><p>计算机成、程序所用的数据、文档资料的集合</p><p>1.1.2开发模型</p><p><strong>瀑布模型</strong>：是一种线形的、顺序的模型。特点：上一阶段的变换结果是下一阶段的变换的输入。相邻两个阶段具有因果关系，紧密相连。</p><p>优点：</p><p>1.给项目提供各个阶段划分的检查点 2.当前阶段完成后只需要关注后续阶段 3.提供一个共同模板，使分析、设计、编码、测试、支持的方法有一个共同的指导。</p><p>缺点：各个阶段的划分固定，阶段之间产生了大量的文档，增大工作量。开发模型是线形的，用户只能在末期见到成果，增大了风险。过多的强制日期和里程碑来跟踪各个阶段。不适应用户需求的变化。</p><p><strong>V模型</strong>：用户需求—&gt;需求分析—&gt;概要设计—&gt;详细设计—&gt;编码—&gt;单元测试—&gt;集成测试—&gt;系统测试—&gt;验收测试</p><p><strong>优点</strong>：V模型将瀑布模型测试部分做了细化，主要反映测试活动与分析设计的关系；强调整个软件项目开发过程中需要经历的若干个测试级别，将开发阶段清晰的表现出来，便于控制开发的过程。</p><p><strong>缺点</strong>：测试作为编码的最后一个部分，需要分析前的错误到后期测试才能发现，没有明确指出对需求，设计的测试。</p><p><strong>w模型</strong>：</p><p>需要测试，概要设计测试，详细设计测试,     单元测试，集成测试，系统测试，系统验收。</p><p>需求分析，概要设计，        详细设计，          编码实现，模块集成，系统构建，系统安装。</p><p><strong>优点</strong>：开发阶段同步测试形成W模型；强调测试计划等工作的先行和对系统需求和系统设计的测试；测试和开发同步进行，有利尽早的发现问题；</p><p><strong>缺点</strong>：只有上一阶段完成才能开始下一阶段的活动，不能支持迭代。</p><p><strong>螺旋模型</strong></p><p><strong>优点</strong>：设计上的灵活性，可以在项目各个阶段变更；以小的系统来构建大型系统，是计算成本变得容易；客户始终参与各个阶段的开发，保证项目不偏离正确方向以及项目的可控性；随着项目的更新，用户始终掌握项目的最新信息，从而使得用户和管理层有效的交互；客户认可这种公司内部的开发方式带来的良好沟通和高质量的产品。</p><p><strong>缺点</strong>：很那你让用户相信这种演化方式的结果是可控的；建设周期长，软件技术发展较快，经常出现软件研发完成后和当前技术有了较大的差距，无法满足当前用户的需求。</p><p><strong>原型模型</strong>（快速成型模型）</p><p><strong>软件生命周期</strong>：需求–》设计–》编码–》测试–》维护–》升级–》废弃</p><p><strong>软件测试的定义</strong>：在规定的条件下对软件进行操作，以发现错误，对软件质量重新进行评估。</p><p><strong>软件测试的原则</strong>：</p><p>1.所有的软件测试应当追溯到用户需求。</p><p>2.所有的软件测试应当尽早的和不断的进行测试。</p><p>3.完全测试不可能，测试需要终止。</p><p>4.测试无法显示软件潜在的缺陷</p><p>5.注意测试中的群集现象。</p><p>6.程序员避免检查自己的程序。</p><p>7.尽量避免测试的随意性。</p><p><strong>测试的风险</strong>：进度风险，质量风险，人员风险，变更风险，成本风险。</p><p><strong>软件测试工程师的职责</strong>：</p><p>1.编写测试计划</p><p>2.编写测试用例</p><p>3.配置测试环境</p><p>4.执行软件测试</p><p>5.报告软件缺陷</p><p>6.更新缺陷报告中的内容</p><p>7.验证修正的缺陷</p><p>8.报告测试状态</p><p>9.完成测试相关的其他内容</p><p><strong>外部质量和内部质量</strong></p><table><thead><tr><th>功能性</th><th align="center">可靠性</th><th>易用性</th><th align="center">效率</th><th align="left">维护性</th><th>可移植性</th></tr></thead><tbody><tr><td>适合性</td><td align="center">成熟性</td><td>易理解性</td><td align="center">时间特性</td><td align="left">易分析性</td><td>适应性</td></tr><tr><td>准确性</td><td align="center">容错性</td><td>易学习性</td><td align="center">资源利用性</td><td align="left">易改变性</td><td>易安装性</td></tr><tr><td>互操作性</td><td align="center">易恢复性</td><td>易操作性</td><td align="center"></td><td align="left">稳定性</td><td>共存性</td></tr><tr><td>安全保密性</td><td align="center"></td><td>吸引性</td><td align="center"></td><td align="left">易测试性</td><td>易替换性</td></tr></tbody></table><p><strong>QC和QA的区别</strong></p><p>前者是保证产品质量符合规定,后者是建立体系并确保体系按要求运作,以提供内外部的信任</p><p>QC就是测试人员，职责是尽可能早地发现软件的缺陷，并确保缺陷得到修复（有些企业里，测试人员被称为SQA）</p><p>QA是流程的监督者，职责是创建和执行 改进软件开发过程，并防止软件缺陷发生 的标准和方法</p><p><strong>CMMI等级</strong></p><p>1.初始级2.可管理级3.已定义级4.量化管理级5.持续优化级</p><p><strong>测试分类</strong></p><p>1.单元测试：指对软件中最小可测单位进行检查和测试。</p><p>2.集成测试(组装测试&#x2F;联合测试)：在单元测试的基础上，将所有的模块按照设计要求（架构图）组装成子系统或者系统，进行集成测试。</p><p>3.系统测试：将已经确认的软件、计算机硬件、外设、网络等其他元素结合在一起，是针对整个产品系统进行的测试。<strong>目的</strong>：是验证系统是否满足了需求规格的定义，找出与需求规格不符或与之矛盾的地方，从而提出更加完善的方案</p><p>4.验收测试：</p><p>4.1A(alpha)测试：软件开发公司组织内部成员模拟各类用户行为对即将上市的产品进行测试。</p><p>4.2B(beta)测试：软件开发公司组织各方面的典型客户在日常工作中实际使用，并要求用户报告异常情况、提出修改意见，然后公司在完善。</p><p>4.3正式的验收测试：有正规的测试过程，需要制定测试计划、定义测试方案、选择测试用例，进行测试，结果提交。着重考虑软件是否满足合同规定的所有功能和性能，文档资料是否完整、准确，人机界面和其他方面。</p><p>5.1静态测试：不允许被测试的软件，而只是静态的检查代码、界面和文档。</p><p>5.2动态测试：实际运行被测试的软件，输入相应的测试数据，检查实际的输出结果是否和预期结果相一致的过程。</p><p>6.黑盒测试：不管内部逻辑和内部特性，只依据规格说明书检查程序的功能是否符合功能说明</p><p>7.白盒测试：着重于程序内部结构和算法，不关心功能和性能指标。</p><p>8.冒烟测试：冒烟测试的对象是每一个新编译需要正式测试的版本，目的是确认软件基本功能正常，可以进行后续的正式测试工作。</p><p>9.回归测试：指修改了旧代码后，重复执行上一个软件版本中使用的过的测试用例，以确认修改没有引入新的错误或导致其他代码产生错误。</p><p>1、重复以前的全部或部分的测试用例。</p><p>2、新加入测试的模块，可能对其他模组产生副作用，故须进行某些程度的回归测试。</p><p>3、回归测试的重心，以关键性模组为核心。</p><p>10.随机测试：测试数据是随机产生的，在测试用例之外。只能作为一个测试的补充。</p><p><strong>停止测试</strong></p><p>要求全部覆盖</p><p>用例全部执行</p><p>缺陷全部修复</p><p>达到预期质量目标</p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 理论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令学习</title>
      <link href="/2023/03/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/03/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="1-电脑的组成"><a href="#1-电脑的组成" class="headerlink" title="1.电脑的组成"></a>1.电脑的组成</h3><p>软件部分：操作系统、各种办公软件、社交、娱乐软件等。</p><p>操作系统：Windows、mac OS等</p><p>硬件部分：电源、主板、处理器（CPU）、硬盘、显卡、内存、输入设备、显示器等</p><p><strong>电源</strong>：为各个硬件部分提供电。各硬件所需电压和电流不同，电源为其进行分配和调整。</p><p><strong>主板</strong>：是处理器(cpu），硬盘、显卡、内存等硬件的载体，这些硬件通过主板进行连接。在电脑开机运行时，这些硬件通过主板进行命令、数据等传输和交互，并发挥各自的作用。</p><p>**处理器(cpu)**：是大脑，是运算和处理中心。我们操作电脑时的各种操作均由处理器(cpu)来进行处理和计算。</p><p><strong>硬盘</strong>：用来存储各种数据、图片、文档、视频的仓库。简单的理解就是“我的电脑”中的C、D、E、F等本地磁盘。</p><p><strong>显卡：</strong>控制显示器的正确显示，是连接显示器和个人计算机主板的重要组件，是“人机”交互的重要设备之一。（有一些低配置的电脑主机中可能会找不到显卡，这类电脑一般是主板上自带集成显卡模块。由于是集成的，所以在图形的处理速度，显示效果等方面略显不足。）</p><p><strong>内存：</strong>笼统的来说，内存是用来暂时存放CPU中的运算数据的一个中转仓库，或者可以把它看作是外存与CPU进行沟通的桥梁。（外存只硬盘、U盘等）。</p><p><strong>输入设备</strong>：输入设备主要有键盘、鼠标、麦克风等。</p><p><strong>显示器</strong>：连接主机或显卡、显示电脑图形界面，方面我们进行各项操作的一块屏幕。</p><h3 id="2-操作系统"><a href="#2-操作系统" class="headerlink" title="2.操作系统"></a>2.操作系统</h3><p>1 个人电脑的操作系统<br>         win7 win10 win11</p><p>​        MAC OS等</p><p>2 服务器的操作系统<br>         –windows server2018&#x2F;…<br>         –linux(unix系统发展出来的)</p><h3 id="3-Linux-命令"><a href="#3-Linux-命令" class="headerlink" title="3. Linux 命令"></a>3. Linux 命令</h3><pre class="line-numbers language-none"><code class="language-none">ls 查看当前目录下的所有信息ls -l 以列表的形式列出当前目录下的文件和文件夹的详细信息ls -a 列出隐藏文件(隐藏文件前面都带有.)pwd 显示当前所在目录路径cd 切换目录绝对目录 是以&#x2F;开头的路径相对路径 . .&#x2F;代表当前目录.. ..&#x2F;代表上一级目录  ..&#x2F;..表示上2级目录cd .. 表示退回到上一级目录cd &#x2F;tmp 表示进入到根目录下的tmp目录里mkdir 创建目录命令后面接目录名称,也可以同时创建多个目录，例如：mkdri a b c 中间以空格隔开mkdir a 在当前目录创建一个新目录，目录名为amkdir -p 创建带有子目录的目录。例如：mkdir -p 1&#x2F;2&#x2F;3&#x2F;4&#x2F;?rmdir 删除空目录(空目录是指目录没任何文件)例如：rmdir a 删除空目录arm -rf 删除非空目录或文件(删除后无法恢复)-r 递归删除-f 强制删除cp 拷贝，复制cp 待拷贝的文件 目标目录cp &#x2F;etc&#x2F;yum.conf .&#x2F;将etc目录下的yum.conf文件复制到当前目录cp &#x2F;etc&#x2F;yum.conf .&#x2F;y.conf 将etc目录下的yum.conf文件复制到当前目录,重命名为y.confmv 剪切，移动，命名在同一个目录下，用mv表示命名在不同目录下，用mv表示剪切mv 源文件 目标mv &#x2F;etc&#x2F;yum.conf .&#x2F; 将&#x2F;etc目录下的yum.conf文件移动到当前目录touch 创建空文件touch a 在当前目录下创建空文件a&gt; 重定向符：可以将这个重定向符左边命令执行的结果，输出到右边文件中&gt; 一个定向符表示将左边命令执行的结果以覆盖的方式写入右边文件    &gt;&gt; 两个定向符表示将左边命令执行的结果以追加的方式写入右边文件中 cat 以滚屏的方式查看文件内容 (就是当文件内容比较多，以滚动的方式查看文件内容，这时只能看到最后一屏的内容)more 以分屏的方式看查文件内容 (就是当文件内容比较多时，以一屏一屏的方式显示给用户看)head 查看文件头部的信息，默认是看到文件头部的前10行 (如果要查看文件头部指定行数的信息： head -行数  文件名)tail 查看文件尾部的信息，默认是看文件尾部的后10行 (如果要查看文件尾部指定行数的信息： tail -行数 文件名)| 管道符,可以将管道符左边命令执行的结果传给右边命令，做为输入的数据ln 链接文件 硬链接   ： 相当于cp命令。当源文件删除之后，目标文件不受影响             ln  源文件   目标文件     软链接   ： 相当于windows下的快捷方式         ln -s 源文件 目标文件         在创建软链接时，如果源文件和目标文件不在同一个目录下，源文件必须用绝对路径grep 文本内容搜索grep 要搜索的内容 文件名grep -n 显示搜索到内容的行号grep -i 突略搜索内容的大小写grep -v 显示不包含搜索内容的信息vi 编辑文件&#x2F;新建文件，vi后面接新文件名输入vi指令后，回车，就打开了vi编辑器（相当于windows下点击了&quot;写字板&quot;这个功能）,相当于新建文件vi 1.txt写入操作:esc---&gt;i保存: esc---&gt;:---&gt;w 要保存的文件名退出:esc--&gt;:---&gt;q强制退出:esc---&gt;:---&gt;q!vi 文件名   #  文件名如果不存在，则表示新建一个文件；如果文件名存在，则表示打开这个文件保存并退出:esc---&gt;:---&gt;wq追加:esc---&gt;a删除单个字符，先将光标移动到要删除的字符下面esc---&gt;x删除整行，将先光标移动到要删除的行下方esc---&gt;dd回退到上一个操作的结果esc---&gt;u查找esc---&gt;:&#x2F;查找的内容如果想继续查找一下，则按n键；查找到之后，光标会跳到相应的字符下方拷贝粘贴，先将光标移动到要拷贝的首字符下方esc---&gt;v---&gt;左右箭头键高亮选中要复制的内容----&gt;y---&gt;py表示复制, p表示粘贴find 查找文件find 路径 -name 文件名tar -zxvf 打包压缩tar -zcvf 打包后的文件名.tar.gz  待打包的目录或文件tar -zxvf 解压包tar -zxvf 待解压的包名  如果将压缩包解压到指定目录tar -zxvf 待解压的包名 -C 目录chmod 修改文件权限chmod r 4 读chmod w 2 写chmod x 1 可执行reboot 立即重启Linux系统shutdown 指定时间重启Linux系统和ps -aux 列出Linux服务器上所有进程的信息如何查看指定进程的信息，比如要查看vi这个进程的信息?ps -aux|grep vi 进程： 就是一个正在运行的程序kill -9 进程号 结束指定进程号的进程top 实时获取linux上所有进程的数据（cpu,内存使用，每隔5秒刷新一次）df 查看linux系统磁盘使用情况free 查看内存使用情况netstat  ntlp: 查看端口使用情况如何查看指定端口，比如要查看80这个端口？netstat -ntlp | grep 80<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>未完成</p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL数据库学习01</title>
      <link href="/2023/03/15/SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A001/"/>
      <url>/2023/03/15/SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A001/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Orcale数据库客户端"><a href="#1-Orcale数据库客户端" class="headerlink" title="1.Orcale数据库客户端"></a>1.Orcale数据库客户端</h3><p>sqlplus是Oracle数据库自带的客户端工具，类似的客户端工具还有</p><p>oracle数据库安装时自动创建的两个管理员账号：sys system (和普通用户scott，这个账号需要先解除冻结才能使用)</p><p>sqlplus的登录命令是:</p><pre class="line-numbers language-none"><code class="language-none">管理员用户登录sqlplus 用户名&#x2F;密码 as 连接身份(如：sysdba、sysoper、normal)普通用户登录sqlplus 用户名&#x2F;密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>SQL Developer：<a href="https://www.oracle.com/tools/downloads/sqldev-downloads.html">https://www.oracle.com/tools/downloads/sqldev-downloads.html</a></p><p>PLSQL Developer：<a href="https://www.allroundautomations.com/try-it-free/">https://www.allroundautomations.com/try-it-free/</a></p><p>Navicat：下载地址以及教程   <a href="https://mp.weixin.qq.com/s/YyzoEG2SMwn4BdPfYWIfXw">https://mp.weixin.qq.com/s/YyzoEG2SMwn4BdPfYWIfXw</a></p><h3 id="2-oracle数据库用户和权限"><a href="#2-oracle数据库用户和权限" class="headerlink" title="2.oracle数据库用户和权限"></a>2.oracle数据库用户和权限</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">创建用户命令<span class="token punctuation">(</span>必须是管理员才能创建新用户，用户名只能用字母、数字、下划线组成，且首字符只能是字母<span class="token punctuation">)</span><span class="token keyword">create</span> <span class="token keyword">user</span> 用户名 identified <span class="token keyword">by</span> 密码<span class="token punctuation">;</span> <span class="token comment">-- 例：create user scott identified by tiger;</span>冻结账户<span class="token punctuation">(</span>冻结账号和解除冻结都必须是管理员才能进行冻结和解除<span class="token punctuation">)</span><span class="token keyword">alter</span> <span class="token keyword">user</span> 用户名 account <span class="token keyword">lock</span><span class="token punctuation">;</span>  <span class="token comment">-- 例：alter user scott account lock;</span>解除冻结<span class="token keyword">alter</span> <span class="token keyword">user</span> 用户名 account <span class="token keyword">unlock</span><span class="token punctuation">;</span>  <span class="token comment">-- 例：alter user scott account unlock;</span>修改用户密码<span class="token punctuation">(</span>用户可以自己修改，管理员也可以修改<span class="token punctuation">)</span><span class="token keyword">alter</span> <span class="token keyword">user</span> 用户名 identified <span class="token keyword">by</span> 新密码<span class="token punctuation">;</span>赋予权限<span class="token punctuation">(</span>必须是管理员用户<span class="token punctuation">(</span>sys<span class="token punctuation">,</span>system<span class="token punctuation">)</span>才能赋予权限<span class="token punctuation">,</span>权限有：<span class="token keyword">connect</span><span class="token punctuation">,</span>resource<span class="token punctuation">,</span>dba。<span class="token keyword">connect</span>和resource相互独立，resource不包含<span class="token keyword">connect</span><span class="token punctuation">)</span><span class="token keyword">grant</span> 权限 <span class="token keyword">to</span> 用户名<span class="token punctuation">;</span> <span class="token comment">-- 例：grant connect,resource to scott;</span>回收权限<span class="token punctuation">(</span>必须是管理员才能回收<span class="token punctuation">)</span><span class="token keyword">revoke</span> 权限 <span class="token keyword">from</span> 用户名<span class="token punctuation">;</span>  <span class="token comment">-- 例： revoke connect,resource from scott;</span>删除用户<span class="token punctuation">(</span>必须是管理员才能删除<span class="token punctuation">)</span><span class="token keyword">drop</span> <span class="token keyword">user</span> 用户名<span class="token punctuation">;</span>  <span class="token comment">--例： drop user scott;</span>强制删除<span class="token keyword">drop</span> <span class="token keyword">user</span> 用户名 <span class="token keyword">cascade</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-SQL数据操作和查询"><a href="#3-SQL数据操作和查询" class="headerlink" title="3.SQL数据操作和查询"></a>3.SQL数据操作和查询</h3><p>Oracle数据库的核心是表，表里的列常用的数据类型如下：</p><table><thead><tr><th align="left">类型</th><th>含义</th></tr></thead><tbody><tr><td align="left">char(length)</td><td>存储固定长度的字符串。参数length指定了长度，如果存储的字符串长度小于length,用空格填充。默认长度1，最长不超过2000字节。</td></tr><tr><td align="left">varchar2(length)</td><td>存储可变长的字符串。参数length指定了该字符串的最大长度。默认长度1，最长不超过4000字符。</td></tr><tr><td align="left">number(p,s)</td><td>既可以存储浮点数，也可以存储整数，p表示数字的最大位数(如果是小数包括整数部分和小数部分和小数点，p默认是38位)，s指小数位数。</td></tr><tr><td align="left">date</td><td>存储日期和时间，存储纪元、4位年、月、日、时、分、秒，存储时间从公元前4712年1月1日到公元后4712年12月31日。</td></tr><tr><td align="left">timestamp</td><td>不但存储日期的年月日，时分秒，以及秒后6位，同时包括时区。</td></tr><tr><td align="left">clob</td><td>存储大的文本，比如存储非结构化的XML文档</td></tr><tr><td align="left">blob</td><td>存储二进制对象，如图形，视频，声音等。</td></tr></tbody></table><p>number类型示例：</p><table><thead><tr><th>格式</th><th>输入的数字</th><th>实际的存储</th></tr></thead><tbody><tr><td>number</td><td>1234.567</td><td>1234.567</td></tr><tr><td>number(6，2)</td><td>123.4567</td><td>123.46</td></tr><tr><td>number(4，2)</td><td>12345.67</td><td>输入的数字超过了所指定的精度，数据库不能存储</td></tr></tbody></table><p>内置函数sysdate,可以获取当前的系统日期和时间，返回date类型。</p><p>systimestamp函数可以返回当前日期、时间、和时区。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">例如：<span class="token keyword">select</span> sysdate<span class="token punctuation">,</span>systimestamp <span class="token keyword">from</span> dual<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-数据操纵语言"><a href="#3-1-数据操纵语言" class="headerlink" title="3.1 数据操纵语言"></a>3.1 数据操纵语言</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">创建表的语法结构<span class="token keyword">create</span> <span class="token keyword">table</span> 表明<span class="token punctuation">(</span>列名<span class="token number">1</span> 数据类型<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>列名n 数据类型<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token operator">|</span>列名<span class="token operator">|</span>表达式 <span class="token keyword">from</span> 表名 <span class="token keyword">where</span> 条件 <span class="token keyword">order</span> <span class="token keyword">by</span> 列名 <span class="token keyword">asc</span><span class="token operator">|</span><span class="token keyword">desc</span><span class="token comment">-- 查询的命令公式</span><span class="token comment">-- 1.*号表示所有的列</span><span class="token comment">-- 2.列名可以选择多个表中的列名，各个列名中间用逗号分隔</span><span class="token comment">-- 3.表达式可以是列名、函数、常熟等组成的表达式</span><span class="token comment">-- 4.where是查询的条件</span><span class="token comment">-- 5.order by 要求查询的结果中排序默认是升序,asc是升序，desc是降序</span><span class="token keyword">insert</span> <span class="token keyword">into</span> 表明<span class="token punctuation">(</span>列名<span class="token number">1</span><span class="token punctuation">,</span>列名n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span>值n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token comment">-- 添加数据的语句</span><span class="token comment">-- 1.列名可以省略，当省略列名时，默认时表中的所有列名，列名顺序为表中定义中列的先后顺序</span><span class="token comment">-- 2.值的数量要和列名的数量和顺序一致。值的类型和列名的类型一致。</span><span class="token comment">-- 3.值的数据类型时number时，直接填数值。值的数据类型时char、varchar2时，值需要用单引号引起来。值的数据类型是date，值需要用to_date()转换</span><span class="token keyword">update</span> 表明 <span class="token keyword">set</span> 列名<span class="token operator">=</span>更新后的值，列名<span class="token operator">=</span>更新后的值<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">where</span> 条件<span class="token punctuation">;</span><span class="token comment">-- 修改数据的语句</span><span class="token comment">-- 表示把满足where条件的值改成更新后的值</span><span class="token keyword">delete</span> <span class="token keyword">from</span> 表名 <span class="token keyword">where</span> 条件<span class="token punctuation">;</span><span class="token comment">-- 删除数据的语句</span><span class="token comment">-- 表示把满足where条件的数据以行为单位进行删除</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2-SQL操作符"><a href="#3-2-SQL操作符" class="headerlink" title="3.2 SQL操作符"></a>3.2 SQL操作符</h4><pre class="line-numbers language-none"><code class="language-none">关系运算符&#x3D; 等于&lt;&gt;或者!&#x3D; 不等于 &lt; 小于&gt; 大于&lt;&#x3D;小于或等于&gt;&#x3D;大于或等于逻辑运算符and 并且  当where后有多个条件，并且这些条件都成立，条件和条件之间用and连接or  或者  当where后有多个条件，只需要满足其中的一个条件时，条件和条件之间用or连接not 求反 null 空值 空值是指没有赋值，不知道，不能用的值叫空值；0和空格不是空值。例：select * from 表名 where 列名 is null;in 可以通过这个操作符在where条件中指定某个列的数据范围 例：select * from 表名 where 列名  in&#x2F;not in(值1,...,值n)模糊查询like  %表示0个或者多个任意字符，_表示一个任意字符，一般用在字符串数据类型中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-3-rownum和rowid"><a href="#3-3-rownum和rowid" class="headerlink" title="3.3 rownum和rowid"></a>3.3 rownum和rowid</h4><p>rownum：在查询时，可以通过rownum给查询出来的每一行数据标注一个行号</p><p>rowid：表中的每一行在数据文件中都有一个物理地址，ROWID伪列返回的就是该行的物理地址。使用ROWID可以快速的定位表中的某一行。ROWID值可以唯一的标识表中的一行。由于ROWID返回的是该行的物理地址，因此使用ROWID可以显示行是如何存储的。</p><h3 id="4-Oracle函数"><a href="#4-Oracle函数" class="headerlink" title="4. Oracle函数"></a>4. Oracle函数</h3><h4 id="4-1-字符函数"><a href="#4-1-字符函数" class="headerlink" title="4.1 字符函数"></a>4.1 字符函数</h4><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>ascii(x)</td><td>返回字符x的ASCII编码</td></tr><tr><td>concat(x,y)</td><td>连接字符x和y</td></tr><tr><td>instr(x,str)</td><td>在x中查找str</td></tr><tr><td>length(x)</td><td>返回x的长度</td></tr><tr><td>lower(x)</td><td>x转换为小写</td></tr><tr><td>upper(x)</td><td>x转换为大写</td></tr><tr><td>ltrim(x,’trim_str’)</td><td>把x的左边截去trim_str字符串，缺省截去空格。</td></tr><tr><td>rtrim(x,’trim_str’)</td><td>把x的右边截去trim_str字符串，缺省截去空格。</td></tr><tr><td>trim(‘trim_str’ from x)</td><td>把x的两边截去trim_str字符串，缺省截去空格。</td></tr><tr><td>replace(x,old,new)</td><td>在x中查找old，并替换为new</td></tr><tr><td>substr(x,start,length)</td><td>返回x的字串，从start处开始，截取length个字符，缺省length，默认到结尾。</td></tr></tbody></table><table><thead><tr><th>示例</th><th>示例结果</th></tr></thead><tbody><tr><td>SELECT ASCII(‘a’) FROM DUAL</td><td>97</td></tr><tr><td>SELECT CONCAT(‘Hello’, ‘ world’) FROM DUAL</td><td>Hello world</td></tr><tr><td>SELECT INSTR(‘Hello world’，’or’) FROM DUAL</td><td>8</td></tr><tr><td>SELECT LENGTH(‘Hello’) FROM DUAL</td><td>5</td></tr><tr><td>SELECT LOWER(‘hElLO’) FROM DUAL;</td><td>hello</td></tr><tr><td>SELECT UPPER(‘hello’) FROM DUAL</td><td>HELLO</td></tr><tr><td>SELECT LTRIM(‘&#x3D;&#x3D;&#x3D;HELLO&#x3D;&#x3D;&#x3D;’, ‘&#x3D;’) FROM DUAL</td><td>HELLO&#x3D;&#x3D;&#x3D;</td></tr><tr><td>SELECT RTRIM(‘&#x3D;&#x3D;&#x3D;HELLO&#x3D;&#x3D;&#x3D;’, ‘&#x3D;’) FROM DUAL</td><td>&#x3D;&#x3D;&#x3D;HELLO</td></tr><tr><td>SELECT TRIM(‘&#x3D;’ FROM ‘&#x3D;&#x3D;&#x3D;HELLO&#x3D;&#x3D;&#x3D;’) FROM DUAL</td><td>HELLO</td></tr><tr><td>SELECT REPLACE(‘ABCDE’,’CD’,’AAA’) FROM DUAL</td><td>ABAAAE</td></tr><tr><td>SELECT SUBSTR(‘ABCDE’,2) FROM DUAL</td><td>BCDE</td></tr><tr><td>SELECT SUBSTR(‘ABCDE’,2,3) FROM DUAL</td><td>BCD</td></tr></tbody></table><h4 id="4-2-数字函数"><a href="#4-2-数字函数" class="headerlink" title="4.2 数字函数"></a>4.2 数字函数</h4><table><thead><tr><th><strong>函数</strong></th><th><strong>说明</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td>ABS(x)</td><td>x绝对值</td><td>ABS(-3)&#x3D;3</td></tr><tr><td>ACOS(x)</td><td>x的反余弦</td><td>ACOS(1)&#x3D;0</td></tr><tr><td>COS(x)</td><td>余弦</td><td>COS(1)&#x3D;1.57079633</td></tr><tr><td>CEIL(x)</td><td>大于或等于x的最小值</td><td>CEIL(5.4)&#x3D;6</td></tr><tr><td>FLOOR(x)</td><td>小于或等于x的最大值</td><td>FLOOR(5.8)&#x3D;5</td></tr><tr><td>LOG(x,y)</td><td>x为底y的对数</td><td>LOG(2,4)&#x3D;2</td></tr><tr><td>MOD(x,y)</td><td>x除以y的余数</td><td>MOD(8,3)&#x3D;2</td></tr><tr><td>POWER(x,y)</td><td>x的y次幂</td><td>POWER(2,3)&#x3D;8</td></tr><tr><td>ROUND(x[,y])</td><td>x在第y位四舍五入</td><td>ROUND(3.456,2)&#x3D;3.46</td></tr><tr><td>SQRT(x)</td><td>x的平方根</td><td>SQRT(4)&#x3D;2</td></tr><tr><td>TRUNC(x[,y])</td><td>x在第y位截断</td><td>TRUNC(3.456,2)&#x3D;3.45</td></tr></tbody></table><p>说明：</p><p>1.ROUND(X[,Y])，四舍五入。</p><p>在缺省y时，默认y&#x3D;0；比如：ROUND(3.56)&#x3D;4。</p><p>y是正整数，就是四舍五入到小数点后y位。ROUND(5.654,2)&#x3D;5.65。</p><p>y是负整数，四舍五入到小数点左边|y|位。ROUND(351.654,-2)&#x3D;400。</p><p>2.TRUNC(x[,y])，直接截取，不四舍五入。</p><p>在缺省y时，默认y&#x3D;0；比如：TRUNC (3.56)&#x3D;3。</p><p>y是正整数，就是四舍五入到小数点后y位。TRUNC (5.654,2)&#x3D;5.65。</p><p>y是负整数，四舍五入到小数点左边|y|位。TRUNC (351.654,-2)&#x3D;300。</p><h4 id="4-3-日期函数和转换函数"><a href="#4-3-日期函数和转换函数" class="headerlink" title="4.3 日期函数和转换函数"></a>4.3 日期函数和转换函数</h4><p>1.add_months(d,s)  ,在某一个日期d上，加上指定的月数n，返回计算后的新日期。d表示日期，n表示要加的月数。</p><p>2.last_day(d)   ,返回指定日期当月的最后一天。</p><p>3.round(d,’fmt’)  ,返回一个以fmt为格式的四舍五入日期值，d是日期，fmt是格式模型。默认fmt为DDD，即月中的某一天。</p><p>​fmt格式有： ‘year’ 则舍入到某年的1月1日，即前半年舍去，后半年作为下一年。</p><p>​  ‘month’ 则舍入到某月的1日，即前月舍去，后半月作为下一月。</p><p>​  ‘ddd’  即月中的某一天，最靠近的天，前半天舍去，后半天作为第二天。</p><p>​ ‘day’    即月中的某一天，最靠近的天，前半天舍去，后半天作为第二天。</p><p>4.extra(fmt from d)  提取日期中的特定部分。</p><p>‘fmt’  有year、month、day、hour、minute、second。其中YEAR、MONTH、DAY可以为DATE类型匹配，也可以与TIMESTAMP类型匹配；但是HOUR、MINUTE、SECOND必须与TIMESTAMP类型匹配。</p><p>5.转换函数</p><p>1.to_char(d|n,’fmt’) ,把日期和数字转换为制定格式的字符串。fmt是格式化字符串。</p><p>2.to_date(x,’fmt’) ,把一个字符串以fmt格式转换为一个日期类型。</p><p>3.to_number(x,’fmt’)  把一个字符串以fmt格式转换为一个数字。</p><h4 id="4-4-其他函数"><a href="#4-4-其他函数" class="headerlink" title="4.4 其他函数"></a>4.4 其他函数</h4><p>nvl(x,value)  ,如果x为空，返回value，否则返回x</p><p>nvl(x,value1,value2) ,如果x非空，返回value1，否则返回value2。</p><h4 id="4-5聚合函数"><a href="#4-5聚合函数" class="headerlink" title="4.5聚合函数"></a>4.5聚合函数</h4><table><thead><tr><th>名称</th><th>作用</th><th>语法</th></tr></thead><tbody><tr><td>avg</td><td>平均值</td><td>avg(表达式)</td></tr><tr><td>sum</td><td>求和</td><td>sum(表达式)</td></tr><tr><td>max、min</td><td>最大值、最小值</td><td>min(表达式)，max(表达式)</td></tr><tr><td>count</td><td>数据统计</td><td>count(表达式)</td></tr></tbody></table><h3 id="5-索引"><a href="#5-索引" class="headerlink" title="5.索引"></a>5.索引</h3><p>5.1 数据库中索引（Index）的概念与目录的概念非常类似。如果某列出现在查询的条件中，而该列的数据是无序的，查询时只能从第一行开始一行一行的匹配。创建索引就是对某些特定列中的数据排序，生成独立的索引表。在某列上创建索引后，如果该列出现在查询条件中，Oracle会自动的引用该索引，先从索引表中查询出符合条件记录的ROWID，由于ROWID是记录的物理地址，因此可以根据ROWID快速的定位到具体的记录，表中的数据非常多时，引用索引带来的查询效率非常可观。</p><p>1 创建普通索引<br>     create index 索引名 on  表名(列名); –表示给这个表的这个列创建一个普通索引</p><p>   2 创建唯一索引：<br>     create unique index 索引名 on 表名(列名)<br>       唯一索引，要求就这个列中的数据是不能重复</p><p>   3 删除索引:<br>     drop index 索引名; </p><p>5.2 主键和外键</p><pre class="line-numbers language-none"><code class="language-none">alter table 表名 add constraint 主键名 primary key 列名;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="6-练习题"><a href="#6-练习题" class="headerlink" title="6. 练习题"></a>6. 练习题</h3><p>1.取前几条数据。</p><p>2.先根据部门编号升序，再根据薪水降序。</p><p>3.查询出雇员表(emp)中comm为null的记录。</p><p>4.查询出雇员表(emp)中员工的姓名,将名字中的’A’换为’1’,’B’换为’2’。</p><p>5.查询出每个部门的平均薪水，并显示出部门详细信。</p><p>6.查询出部门人员中薪水大于2000的人在2个以上的部门。</p><p>7.求出每个部门中薪水最高的员工。</p><p>8.分别统计出各个月份入职(hiredate)的员工有多少人。</p><p>9.查询scott.emp表中所有列。</p><p>10.查询scott.emp表中的ename列。</p><p>11.查询scott.emp表中ename列，将其列名改为“雇员姓名”。</p><p>12.查询scott.emp表中sal、comm两项工资的总和。</p><p>13.消除emp表中job列的重复值。</p><p>14.查看scott.emp表中在10号部门的所有员工具体情况。</p><p>15.查询scott.emp表中工资在1500和3000之间的雇员编号。</p><p>16.查询scott.emp表中在10、20或30号部门工作的雇员编号。</p><p>17.查询scott.emp表中名字中含有K字母的雇员姓名。</p><p>18.查询comm列为NULL的雇员信息。</p><p>19.查询10号部门工资在1000元以上的雇员信息。</p><p>20.将emp表按照部门号升序、员工编号降序排列。</p><p>21.统计scott.emp表中各部门的人数。</p><p>22.统计各部门人数，将多于5人的部门编号输出。</p><p>23.将scott.emp表中的内容复制一份到newemp表。</p><p>内置函数 </p><p>24.查看A的ASCII码。25.查看ASCII码为65的字符。</p><p>26.使用LENGTH函数求字符串‘This is Oracle 11g’。</p><p>27.使用CONCAT函数将EMP表中各元组的ename添加在job之后。</p><p>28.使用SUBSTRING函数、SUBSTR函数29.使用MOD函数求8除以3的余数。</p><p>30.使用ROUND函数取整。</p><p>聚合函数</p><p>31.求scott.emp表中sal+500后的平均值。求scott.emp表中不同sal值的平均值。求scott.emp表中sal的最大值和最小值。求scott.emp表所有员工的人数。求scott.emp表sal列之和</p><p>32.日期函数求当前系统时间。求当前月份的最后一天。求当前日期与2016年12月20日之间相隔的月数。求下一个星期一的日期。求你在的年龄。</p><p>转换函数 </p><p>33.将123转换成字符串。</p><p>将’123’转换成数值型。</p><p>将当前日期转换成日期型。</p><p>将‘970.13’转换成数值型后再加上100。</p><p>多表连查 </p><p>34.查询scott.emp表各雇员信息与其所在部门信息。</p><p>35.查询scott.emp表各雇员名字和所在部门名称。</p><p>36.查询比SMITH工资高的雇员姓名。</p><p>37.查询各雇员名字和所在部门名称。</p><p>嵌套查询（子查询） </p><p>38.查询SMITH所在部门的详细信息。</p><p>39.查询与SMITH在同一部门的员工信息。</p><p>40.找出其他部门比10号部门某员工工资高的雇员信息。</p><p>41.找出SMITH所在部门的详细信息。</p><p>42.查看职务为CLERK或SALESMAN的雇员信息。</p><p>高级查询</p><p>43.查询所有员工的人数和他们的平均工资</p><p>44.查询部门编号为20的所有员工信息</p><p>45.查询部门编号为20，部门中工资最高的员工信息46.查询将金COMM高于工资SAL 20%的员工信息</p><p>47.查询所有有奖金的员工信息</p><p>48.查询工龄大于或等于10年的员工信息</p><p>49.查询员工名正好为8个字母的员工信息</p><p>50.查询员工的姓名和工资，并按工资降序排序</p><p>51.查询所有员工的姓名、部门号、工资，结果先按部门号升序排序，再按工资降序排序</p><p>52.查询各个部门中的员工的人数和平均资</p><p>53.统计各个工种的员工的人数和平均工资</p><p>答案地址：<a href="https://blog.csdn.net/m0_63300795/article/details/123861855">https://blog.csdn.net/m0_63300795/article/details/123861855</a></p><p>其他练习：<a href="https://blog.csdn.net/m0_45210394/article/details/125492544">https://blog.csdn.net/m0_45210394/article/details/125492544</a></p><h3 id="7-SQL练习拓展"><a href="#7-SQL练习拓展" class="headerlink" title="7.SQL练习拓展"></a>7.SQL练习拓展</h3><h5 id="7-1-1-第一道拓展练习题"><a href="#7-1-1-第一道拓展练习题" class="headerlink" title="7.1.1.第一道拓展练习题"></a>7.1.1.第一道拓展练习题</h5><p>student（学生表）</p><table><thead><tr><th>id</th><th>c_id</th><th>Name</th><th>Sex</th><th>Score</th></tr></thead><tbody><tr><td>001</td><td>1</td><td>张三</td><td>男</td><td>90</td></tr><tr><td>002</td><td>1</td><td>李四</td><td>女</td><td>80</td></tr><tr><td>003</td><td>1</td><td>王五</td><td>男</td><td>65</td></tr><tr><td>004</td><td>2</td><td>小刘</td><td>男</td><td>60</td></tr><tr><td>005</td><td>2</td><td>赵六</td><td>女</td><td>75</td></tr><tr><td>006</td><td>3</td><td>李伍</td><td>女</td><td>90</td></tr></tbody></table><p>class（班级表）</p><table><thead><tr><th>id</th><th>Name</th></tr></thead><tbody><tr><td>1</td><td>一班</td></tr><tr><td>2</td><td>二班</td></tr></tbody></table><p>1.1写一条于sql语句查询出得分最高的学生，结果如何下：</p><table><thead><tr><th>c_Name</th><th>Name</th><th>Sex</th><th>Score</th></tr></thead><tbody><tr><td>一班</td><td>张三</td><td>男</td><td>90</td></tr><tr><td></td><td>李五</td><td>女</td><td>90</td></tr></tbody></table><p>1.2写一条sql语句查询出一班、二班的人数和平均分，并且按照由高到低排序</p><table><thead><tr><th>c_Name</th><th>RS</th><th>Score</th></tr></thead><tbody><tr><td>一班</td><td>xx</td><td>xx</td></tr><tr><td>二班</td><td>xx</td><td>xx</td></tr></tbody></table><h5 id="7-1-2第二道拓展练习题"><a href="#7-1-2第二道拓展练习题" class="headerlink" title="7.1.2第二道拓展练习题"></a>7.1.2第二道拓展练习题</h5><p>A表 保存客户的基本信息。字段：客户号、姓名、身份证号、出生年月（yyyymmdd）</p><table><thead><tr><th>NO（客户号）</th><th>NAME（姓名）</th><th>ID（身份证号）</th><th>BIRTH（出生年月）</th><th>COUNTRY（国籍）</th></tr></thead><tbody><tr><td>001</td><td>张三</td><td>310111XXXXX1</td><td>19900101</td><td>中国</td></tr><tr><td>002</td><td>李四</td><td>310111XXXXX2</td><td>19800201</td><td>中国</td></tr><tr><td>003</td><td>王五</td><td>310111XXXXX3</td><td>19850301</td><td>中国</td></tr><tr><td>004</td><td>赵六</td><td>310111XXXXX4</td><td>19930401</td><td>美国</td></tr></tbody></table><p>B表 保存客户的资产负债信息。字段：客户号、存款金额、贷款金额</p><table><thead><tr><th>NO（客户号）</th><th>DEPOSIT（存款金额）</th><th>CREDIT（信用卡余额）</th></tr></thead><tbody><tr><td>001</td><td>10001.00</td><td>-100.00</td></tr><tr><td>002</td><td>1000.00</td><td>-2000</td></tr><tr><td>003</td><td>0</td><td>-5000</td></tr><tr><td>004</td><td>100.01</td><td>0</td></tr></tbody></table><p>1.SQL查询语句：姓名叫李四，获取他的身份证号和客户号</p><p>2.SQL查询语句：存款金额大于等于1000的，客户号、客户姓名、身份证号</p><p>3.SQL查询语句：按国籍统计客户号的数量</p><table><thead><tr><th>国籍</th><th>数量</th></tr></thead><tbody><tr><td>中国</td><td>X</td></tr><tr><td>美国</td><td>Y</td></tr></tbody></table><p>4.SQL查询语句：统计80后、90后的信用卡余额总额</p><table><thead><tr><th>年龄段</th><th>信用卡余额</th></tr></thead><tbody><tr><td>80后</td><td>X</td></tr><tr><td>90后</td><td>Y</td></tr></tbody></table><h5 id="7-1-3第三道拓展练习题"><a href="#7-1-3第三道拓展练习题" class="headerlink" title="7.1.3第三道拓展练习题"></a>7.1.3第三道拓展练习题</h5><p>tcbiz_pd.OrderTrans（status：1-新建，2-处理中）</p><table><thead><tr><th>id</th><th>orderNo</th><th>status</th><th>crttime</th><th>deleted</th></tr></thead><tbody><tr><td>1</td><td>ewrt5432</td><td>1</td><td>2021-02-03 19:09:00</td><td>0</td></tr><tr><td>2</td><td>324ewwq</td><td>1</td><td>2021-02-03 09:29:00</td><td>0</td></tr><tr><td>3</td><td>ewrt4321</td><td>2</td><td>2021-02-04 19:19:00</td><td>0</td></tr></tbody></table><p>期望结果</p><table><thead><tr><th>orderNO</th><th>status</th></tr></thead><tbody><tr><td>ewrt5432</td><td>新建</td></tr><tr><td>324ewwq</td><td>新建</td></tr><tr><td>ewrt4321</td><td>处理中</td></tr></tbody></table><p>实现SQL（注意：查询结果中的status的value为中文状态）</p><p>SQL&gt;</p><p>tcbiz_pd.testCase</p><table><thead><tr><th>id</th><th>caseName</th><th>status</th><th>crttime</th><th>crtUser</th></tr></thead><tbody><tr><td>1</td><td>支付交易成功</td><td>成功</td><td>2021-02-03 09:09:00</td><td>xl112</td></tr><tr><td>2</td><td>支付交易成功</td><td>成功</td><td>2021-02-03 19:09:00</td><td>xl112</td></tr><tr><td>3</td><td>支付交易成功</td><td>成功</td><td>2021-02-04 09:09:00</td><td>xl112</td></tr><tr><td>4</td><td>支付交易成功</td><td>成功</td><td>2021-02-05 09:19:00</td><td>wxp7786</td></tr><tr><td>5</td><td>支付交易成功</td><td>成功</td><td>2021-02-05 19:09:00</td><td>lpy2232</td></tr><tr><td>6</td><td>认证交易成功</td><td>成功</td><td>2021-02-05 09:09:00</td><td>wxp7786</td></tr><tr><td>7</td><td>认证交易成功</td><td>失败</td><td>2021-02-05 22:09:00</td><td>wxp7786</td></tr></tbody></table><p>tcbiz_pd.User</p><h4 id="7-2-拓展答案"><a href="#7-2-拓展答案" class="headerlink" title="7.2.拓展答案"></a>7.2.拓展答案</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 第一道拓展练习题答案</span><span class="token number">1</span>、<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student a <span class="token keyword">left</span> <span class="token keyword">join</span> class b <span class="token keyword">on</span> a<span class="token punctuation">.</span>c_id <span class="token operator">=</span> b<span class="token punctuation">.</span>id<span class="token keyword">where</span> score <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token keyword">from</span> student<span class="token punctuation">)</span><span class="token number">2</span>、<span class="token keyword">select</span> b<span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">avg</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token keyword">as</span> avgScore <span class="token keyword">from</span> student a<span class="token punctuation">,</span>class b <span class="token keyword">where</span> a<span class="token punctuation">.</span>c_id <span class="token operator">=</span> b<span class="token punctuation">.</span>id<span class="token keyword">group</span> <span class="token keyword">by</span> b<span class="token punctuation">.</span>name<span class="token keyword">order</span> <span class="token keyword">by</span> avgScore<span class="token punctuation">;</span><span class="token comment">-- 第二道拓展练习题答案</span><span class="token number">1</span>、<span class="token keyword">select</span> ID <span class="token keyword">from</span> A <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">'李四'</span><span class="token punctuation">;</span><span class="token number">2</span>、<span class="token keyword">select</span> <span class="token keyword">NO</span><span class="token punctuation">,</span>NAME，ID <span class="token keyword">from</span> A<span class="token punctuation">,</span>B <span class="token keyword">where</span> A<span class="token punctuation">.</span><span class="token keyword">NO</span> <span class="token operator">=</span> B<span class="token punctuation">.</span><span class="token keyword">NO</span> <span class="token operator">AND</span> DEPOSIT <span class="token operator">>=</span> <span class="token number">1000</span><span class="token punctuation">;</span><span class="token number">3</span>、<span class="token keyword">select</span> COUNTRY<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> A <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> COUNTRY<span class="token punctuation">;</span><span class="token number">4</span>、<span class="token keyword">SELECT</span> <span class="token string">'80 后'</span> <span class="token keyword">as</span> 年龄段，<span class="token function">sum</span><span class="token punctuation">(</span>CREDIT<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">'信用卡余额'</span> <span class="token keyword">FROM</span> A<span class="token punctuation">,</span>B <span class="token keyword">WHERE</span> A<span class="token punctuation">.</span><span class="token keyword">NO</span> <span class="token operator">=</span> B<span class="token punctuation">.</span><span class="token keyword">NO</span> <span class="token operator">AND</span> BIRTH <span class="token operator">>=</span> <span class="token number">19800101</span> <span class="token operator">AND</span> BIRTH <span class="token operator">&lt;</span> <span class="token number">19900101</span><span class="token keyword">UNION</span><span class="token keyword">SELECT</span> <span class="token string">'90 后'</span> <span class="token keyword">as</span> 年龄段，<span class="token function">sum</span><span class="token punctuation">(</span>CREDIT<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">'信用卡余额'</span> <span class="token keyword">FROM</span> A<span class="token punctuation">,</span>B <span class="token keyword">WHERE</span> A<span class="token punctuation">.</span><span class="token keyword">NO</span> <span class="token operator">=</span> B<span class="token punctuation">.</span><span class="token keyword">NO</span> <span class="token operator">AND</span> BIRTH <span class="token operator">>=</span> <span class="token number">19900101</span> <span class="token operator">AND</span> BIRTH <span class="token operator">&lt;</span> <span class="token number">20000101</span><span class="token punctuation">;</span><span class="token comment">-- 第三道拓展练习题答案</span><span class="token number">1</span>、<span class="token keyword">select</span> orderNo<span class="token punctuation">,</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">status</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'新建'</span><span class="token punctuation">,</span><span class="token string">'处理中'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> OrderTrans<span class="token punctuation">;</span><span class="token number">2</span>、<span class="token keyword">select</span> DATE_FORMAT<span class="token punctuation">(</span>a<span class="token punctuation">.</span>crttime<span class="token punctuation">,</span><span class="token string">'%m-%d-%Y'</span><span class="token punctuation">)</span> <span class="token punctuation">,</span>username<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> testCase a<span class="token punctuation">,</span><span class="token keyword">User</span> b <span class="token keyword">where</span> a<span class="token punctuation">.</span>crtUser <span class="token operator">=</span> b<span class="token punctuation">.</span>UserId <span class="token keyword">group</span> <span class="token keyword">by</span> DATE_FORMAT<span class="token punctuation">(</span>a<span class="token punctuation">.</span>crttime<span class="token punctuation">,</span><span class="token string">'%m-%d-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>b<span class="token punctuation">.</span>username<span class="token punctuation">,</span> <span class="token keyword">having</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">'成功'</span><span class="token punctuation">;</span><span class="token number">3</span>、<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">,</span>DATE_FORMAT<span class="token punctuation">(</span>crttime<span class="token punctuation">,</span><span class="token string">'%m-%d-%Y'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> OrderInfo <span class="token keyword">group</span> <span class="token keyword">by</span>DATE_FORMAT<span class="token punctuation">(</span>crttime<span class="token punctuation">,</span><span class="token string">'%m-%d-%Y'</span><span class="token punctuation">)</span>；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> SQL </tag>
            
            <tag> Orcale </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/15/hello-world/"/>
      <url>/2023/03/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
